
plugins {
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'java-library'
    id 'com.google.protobuf' version '0.8.18'
}

group = 'com.kartike'
version = '0.0.1-SNAPSHOT'

java.sourceCompatibility = '17'
java.targetCompatibility = '17'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}



def grpcVersion = '1.49.0'
def protobufVersion = '3.19.1'

dependencies {
    repositories {
        mavenCentral()
    }
//    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE'
    runtimeOnly('org.postgresql:postgresql')
    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.2.0')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
//    developmentOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    api "io.grpc:grpc-protobuf:${grpcVersion}"
}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }

}

//sourceSets.main.java.srcDir new File(buildDir, 'generated/source')
tasks.withType(Test) {
    useJUnitPlatform()
}
